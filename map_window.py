# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'map_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import QtWebEngineWidgets
import sys

from create_map import QueryMap, MapIterator
from query_incidents import QueryDF


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.EndDateEdit = QtWidgets.QDateEdit(self.centralwidget)
        self.EndDateEdit.setGeometry(QtCore.QRect(250, 470, 91, 31))
        self.EndDateEdit.setObjectName("dateEdit_2")
        self.EndDateEdit.setDisplayFormat("MM/yyyy")
        self.QueryPushButton = QtWidgets.QPushButton(self.centralwidget)
        self.QueryPushButton.setGeometry(QtCore.QRect(250, 510, 88, 27))
        self.QueryPushButton.setObjectName("pushButton_3")
        self.NextPushButton = QtWidgets.QPushButton(self.centralwidget)
        self.NextPushButton.setGeometry(QtCore.QRect(530, 520, 41, 21))
        self.NextPushButton.setObjectName("pushButton")
        self.webEngineView = QtWebEngineWidgets.QWebEngineView(
            self.centralwidget)
        self.webEngineView.setGeometry(QtCore.QRect(0, 10, 791, 361))
        self.webEngineView.setMinimumSize(QtCore.QSize(791, 361))
        self.webEngineView.setMaximumSize(QtCore.QSize(791, 361))
        self.webEngineView.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.webEngineView.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.webEngineView.setUrl(QtCore.QUrl("about:blank"))
        self.webEngineView.setObjectName("webEngineView")
        self.StartDateEdit = QtWidgets.QDateEdit(self.centralwidget)
        self.StartDateEdit.setGeometry(QtCore.QRect(250, 430, 91, 31))
        self.StartDateEdit.setObjectName("plainTextEdit")
        self.StartDateEdit.setDisplayFormat("MM/yyyy")
        self.incidents_label = QtWidgets.QLabel(self.centralwidget)
        self.incidents_label.setGeometry(QtCore.QRect(390, 450, 81, 19))
        self.incidents_label.setObjectName("label_4")
        self.incidents_desc_label = QtWidgets.QLabel(self.centralwidget)
        self.incidents_desc_label.setGeometry(QtCore.QRect(480, 450, 81, 19))
        self.incidents_desc_label.setObjectName("plainTextEdit_4")
        self.nb_label = QtWidgets.QLabel(self.centralwidget)
        self.nb_label.setGeometry(QtCore.QRect(430, 480, 41, 19))
        self.nb_label.setObjectName("label_5")
        self.month_desc_label = QtWidgets.QLabel(self.centralwidget)
        self.month_desc_label.setGeometry(QtCore.QRect(480, 415, 81, 31))
        self.month_desc_label.setObjectName("month label")
        self.month_label = QtWidgets.QLabel(self.centralwidget)
        self.month_label.setGeometry(QtCore.QRect(440, 420, 31, 19))
        self.month_label.setObjectName("label_3")
        self.end_date_label = QtWidgets.QLabel(self.centralwidget)
        self.end_date_label.setGeometry(QtCore.QRect(160, 480, 81, 19))
        self.end_date_label.setObjectName("label_2")
        self.nb_ComboBox = QtWidgets.QComboBox(self.centralwidget)
        self.nb_ComboBox.setGeometry(QtCore.QRect(480, 480, 240, 31))
        self.nb_ComboBox.setObjectName("plainTextEdit_5")
        self.BackPushButton = QtWidgets.QPushButton(self.centralwidget)
        self.BackPushButton.setGeometry(QtCore.QRect(480, 520, 41, 21))
        self.BackPushButton.setObjectName("pushButton_2")
        self.start_date_label = QtWidgets.QLabel(self.centralwidget)
        self.start_date_label.setGeometry(QtCore.QRect(160, 430, 81, 19))
        self.start_date_label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.QueryPushButton.setText(_translate("MainWindow", "Consultar"))
        self.NextPushButton.setText(_translate("MainWindow", ">>"))
        self.incidents_label.setText(_translate("MainWindow", "# incidentes"))
        self.nb_label.setText(_translate("MainWindow", "Barrio"))
        self.month_label.setText(_translate("MainWindow", "Mes"))
        self.end_date_label.setText(_translate("MainWindow", "Fecha final"))
        self.BackPushButton.setText(_translate("MainWindow", "<<"))
        self.start_date_label.setText(
            _translate("MainWindow", "Fecha inicial"))

    def _init_nb_ComboBox(self):
        query_df = QueryDF('incidents.csv')
        nb_list = query_df.get_neighborhood_list()

        self.nb_ComboBox.addItems(nb_list)

    def _show_map(self):
        self.map = QueryMap('incidents.csv')
        data = self.map.show_map()
        self.webEngineView.setHtml(data.getvalue().decode())

    def _update_map(self, data, date, num_inc: int):
        if num_inc > 0:
            date = date.strftime("%m-%Y")

            self.month_desc_label.setText(str(date))

            self.webEngineView.setHtml(data.getvalue().decode())
            self.incidents_desc_label.setText(str(num_inc))

    def _show_marks_by_neighborhood(self):
        nbh_name = self.nb_ComboBox.toPlainText()
        data, num_inc = self.map.show_marks_by_neighborhood(nbh_name)
        self.webEngineView.setHtml(data.getvalue().decode())
        self.incidents_desc_label.setText(str(num_inc))

    def _show_marks_by_neighborhood_date(self):
        nbh_name = str(self.nb_ComboBox.currentText())
        start_date = self.StartDateEdit.date().toPyDate()
        end_date = self.EndDateEdit.date().toPyDate()

        self.map_iterator = self.map.show_marks_by_neighborhood_and_date_range(
            nbh_name, start_date, end_date)

        data, num_inc, date = self.map_iterator.show_reg()
        if date != 0:
            self._update_map(data, date, num_inc)
            self.BackPushButton.setDisabled(False)
            self.NextPushButton.setDisabled(False)
        else:
            self.BackPushButton.setDisabled(True)
            self.NextPushButton.setDisabled(True)

    def _show_marks_next_date(self):
        if self.map_iterator:
            data, num_inc, date = self.map_iterator.show_next_reg()

            self.BackPushButton.setDisabled(False)
            if date == 0:
                self.NextPushButton.setDisabled(True)
            else:
                self._update_map(data, date, num_inc)

    def _show_marks_back_date(self):
        if self.map_iterator:
            data, num_inc, date = self.map_iterator.show_back_reg()

            self.NextPushButton.setDisabled(False)
            if date == 0:
                self.BackPushButton.setDisabled(True)
            else:
                self._update_map(data, date, num_inc)

    def initUI(self):
        self.map_iterator = None
        self._show_map()
        self._init_nb_ComboBox()
        self.QueryPushButton.clicked.connect(
            self._show_marks_by_neighborhood_date)

        self.NextPushButton.clicked.connect(self._show_marks_next_date)
        self.BackPushButton.clicked.connect(self._show_marks_back_date)


if __name__ == "__main__":
    app = QtWidgets.QApplication(["NY Incidents Map"])

    mainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(mainWindow)
    ui.initUI()
    mainWindow.show()

    sys.exit(app.exec())
